Since the Radio object has no fields, its memory layout probably
consists of only a vtable. Pointers to class-specific functions
are not stored in an object (they are really just regular functions
with a hidden "this" parameter). Specific versions of the functions
get stored in the vtable depending on the inheritance hierarchy.

Radio's layout looks like this:
    Pointer to vtable part 1 (Transmitter::Storable)
    Pointer to vtable part 2 (Receiver::Storable)

Radio's vtable would look like this:
    vtable part 1: (Transmitter::Storable)
        Ptr to Radio::get_file()
        Ptr to Radio::read()
        Ptr to Radio::write()
    vtable part 2: (Receiver::Storable)
        Ptr to Radio::get_file()
        Ptr to Radio::read()
        Ptr to Radio::write()
    
Radio overrides all three functions supplied by Storable, so
all three functions in the vtable point to Radio's version.
It is not possible to store a Storable* pointer to a Radio object
because that would be ambiguous. Which path (Transmitter or Receiver)
would be used for overridden functions?

However, storing either a Transmitter or a Receiver pointer
to a Radio object would result in the following process when
a virtual call is made:

1. Get the correct vtable pointer for the inheritance path
   (Transmitter vs. Receiver).
1. Find the correct index for the function read() in the
   selected vtable.
2. Access the vtable entry at that index.
3. Call that function - which is Radio::read() in either case.
